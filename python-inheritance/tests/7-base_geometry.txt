Using class ``BaseGeometry``
-----------------------

import class ``BaseGeometry``

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now use different cases:
Function area()
  >>>bg = BaseGeometry()
  >>>bg.area
  Traceback (most recent call last):
  Exception: area() is not implemented

Basic usage:
  >>>bg.integer_validator("school", 12)

Function integer_validator with 0 input :
  >>>bg.integer_validator("school", 12)
  Traceback (most recent call last):
  ValueError: my_int must be greater than 0

Function integer_validator with 0 input :
  >>>bg.integer_validator("school", 12.3)
  Traceback (most recent call last):
  TypeError: my_int must be an integer
  

Function integer_validator with 0 input :
  >>>bg.integer_validator("school", "school")
  Traceback (most recent call last):
  TypeError: my_int must be an integer

Function integer_validator with 0 input :
  >>>bg.integer_validator("school", -1)
  Traceback (most recent call last):
  ValueError: my_int must be greater than 0
  
Function integer_validator with 0 input :
  >>>bg.integer_validator("school", [1])
  Traceback (most recent call last):
  TypeError: my_int must be an integer

Function integer_validator with 0 input :
  >>>bg.integer_validator()
  Traceback (most recent call last):
  TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'